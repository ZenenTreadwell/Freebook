{"version":3,"sources":["static/me_mountaintop_thumb.jpg","static/banner2.png","components/Header.js","components/icoEntry.js","components/About.js","components/NewPost.js","components/PostFeed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","navBar","links","maxLen","length","ButtonGroup","className","aria-label","style","marginRight","map","buildLink","zIndex","slice","buildDropdown","json","Button","key","id","variant","href","addr","name","more_links","Dropdown","Toggle","Menu","buildDropEntry","Item","getHeaderStyle","user","backgroundImage","banner","backgroundSize","this","props","userInfo","Container","Jumbotron","Row","src","profile_pic","alt","nameStyle","Card","navCardStyle","Navbar","React","Component","marginTop","opacity","color","textShadow","fontSize","icoEntry","value","icoName","out","icon","About","listInfo","keys","Object","listStyleType","lineHeight","intro","Body","Title","quote","Text","text","about","NewPost","state","onChange","e","setState","target","onSubmit","preventDefault","newPost","Form","Group","controlId","Control","as","placeholder","rows","type","PostFeed","buildPost","post","date","Date","posted","profile","split","join","content","posts","sort","post1","post2","library","add","faBirthdayCake","faPhone","faCompass","faHome","faEnvelope","faVenusMars","faCircle","App","activeUser","header","hometown","loc","birthday","phone","email","pronouns","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5fbb1d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_mountaintop_thumb.99ef0b5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner2.b3657f86.png\";","import React from 'react';\n\nimport { Container, Jumbotron, Card, Row, Navbar, Dropdown, Button, ButtonGroup } from 'react-bootstrap';\n\nclass Header extends React.Component {\n\n    // Builder for the navigation bar\n    navBar = (links, maxLen) => {\n        let len = links.length;\n\n        if (len <= maxLen) {\n            // Return basic navbar\n            return (\n                <ButtonGroup className=\"bg-light text-dark ml-auto\" aria-label=\"Navigation Links\" style={{ marginRight:\"-30px\"}}>\n                    { links.map(this.buildLink) }\n                </ButtonGroup>\n            );\n        } else {\n            // return navbar with dropdown\n            return (\n                <ButtonGroup className=\"bg-light text-dark ml-auto\" aria-label=\"Navigation Links\" style={{ zIndex: 10 }}>\n                    { links.slice(0,maxLen-1).map(this.buildLink) }\n                    { this.buildDropdown(links.slice(maxLen-1)) }\n                </ButtonGroup>\n            );\n        }\n    }\n\n    buildLink = (json) => {\n        return <Button className=\"bg-light text-dark\" key={json.id} variant=\"light\" href={json.addr}>{json.name}</Button>;\n    }\n\n    // Provides a dropdown menu for link overflow\n    buildDropdown = (more_links) => {\n        return (\n            <Dropdown>\n                <Dropdown.Toggle className=\"bg-light text-dark\" variant=\"primary\" id=\"dropdown-basic\" style={{marginRight:\"-30px\"}}>\n                    More\n                </Dropdown.Toggle>\n                <Dropdown.Menu >\n                    { more_links.map(this.buildDropEntry) }\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n\n    buildDropEntry = (json) => {\n        return <Dropdown.Item key={json.id} href={json.addr}>{json.name}</Dropdown.Item>\n    }\n\n    getHeaderStyle = (user) => {\n        return {\n            backgroundImage: \"url(\"+ user.banner +\")\",\n            backgroundSize: 'cover',\n        };\n    }\n\n    render() {\n        let user = this.props.userInfo;\n\n        return (\n            <Container className=\"col-12\" style={{ zIndex: 2 }}>\n                <Jumbotron className=\"col-12 col-sm-11 col-md-10 rounded container-fluid mx-auto m-3 p-3\" style={this.getHeaderStyle(user)}>\n                    <Row className=\"pl-4\">\n                        <div className=\"d-flex d-sm-none\">\n                        <img src={user.profile_pic} alt=\"Profile\" className=\"img-thumbnail rounded-circle w-50\"  style={{ zIndex: 1, }}/>\n                        <p className=\"col-7 ml-auto col-sm-8 align-self-end mb-4\" style={nameStyle}>{user.name}</p>\n                        </div>\n                        <div className=\"d-none d-sm-flex\">\n                        <img src={user.profile_pic} alt=\"Profile\" className=\"img-thumbnail rounded-circle w-25\"  style={{ zIndex: 1, }}/>\n                        <p className=\"col-7 ml-auto col-sm-9 align-self-end mb-4\" style={nameStyle}>{user.name}</p>\n                        </div>\n                    </Row>\n                    <Card className=\"col-12 align-bottom\" style={navCardStyle}>\n                        <Navbar className=\"d-flex d-sm-none col-10 ml-auto mr-1\">\n                            {this.navBar(user.links, 2)}\n                        </Navbar>\n                        <Navbar className=\"d-none d-sm-flex d-md-none col-11 ml-auto mr-1\">\n                            {this.navBar(user.links, 4)}\n                        </Navbar>\n                        <Navbar className=\"d-none d-md-flex d-lg-none col-11 ml-auto mr-1\">\n                            {this.navBar(user.links, 5)}\n                        </Navbar>\n                        <Navbar className=\"d-none d-lg-flex d-xl-none col-11 ml-auto\">\n                            {this.navBar(user.links, 6)}\n                        </Navbar>\n                        <Navbar className=\"d-none d-xl-flex col-11 ml-auto\">\n                            {this.navBar(user.links, 7)}\n                        </Navbar>\n                    </Card>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nconst navCardStyle = {\n    marginTop: '-20px',\n    opacity: 0.8,\n}\n\nconst nameStyle = {\n    color: \"#eee\",\n    textShadow: \"0.1em 0.1em 0.1em grey\",\n    fontSize: '32px',\n}\n\nexport default Header;\n\n","import React from 'react'; \n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction icoEntry(key, value) {\n    var icoName = '';\n    var out = value;\n    switch (key) {\n        case 'birthday':\n            icoName = \"birthday-cake\";\n            break;\n        case 'phone':\n            icoName = \"phone\";\n            out = <a href={\"tel:\"+value}>{value}</a>;\n            break;\n        case 'loc':\n            icoName = \"compass\";\n            break;\n        case 'hometown':\n            icoName = \"home\";\n            break;\n        case 'pronouns':\n            icoName = \"venus-mars\";\n            break;\n        case 'email':\n            icoName = \"envelope\";\n            out = <a href={\"mailto: \"+value}>{value}</a>;\n            break;\n        default:\n            icoName = \"circle\";\n    };\n\n    return (\n        <li><FontAwesomeIcon icon={icoName} style={{marginRight: '6px'}}/>{out}</li>\n    );\n}\n\nexport default icoEntry;\n\n","import React from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport icoEntry from './icoEntry.js';\n\nclass About extends React.Component {\n\n    // This will take each entry in the about object and output a listGroup member with a logo based on the key\n    listInfo = (json) => {\n        let keys = Object.keys(json);\n        \n        return (\n            <ul style={{listStyleType: \"none\", lineHeight:\"150%\"}}>\n                {keys.map( key => icoEntry(key,json[key]))}\n            </ul>\n        );\n    }\n\n    render() {\n        let intro = this.props.intro;\n        return (\n            <Card id=\"about\" className=\"bg-light mb-3\" style={{ zIndex: -1 }}>\n                <Card.Body>\n                    <Card.Title className=\"text-center\"><i>\"{intro.quote}\"</i></Card.Title>\n                    <hr/>\n                    <Card.Text className=\"text-justify\"><small>{intro.text}</small></Card.Text>\n                    <hr/>\n                    {this.listInfo(this.props.about)}\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n    \nexport default About;\n","import React from 'react';\n\nimport { Card, Form, Button } from 'react-bootstrap';\n\nclass NewPost extends React.Component {\n    state = {\n        text: \"\"\n    }\n\n    onChange = (e) => this.setState(\n        { [e.target.name]: e.target.value }\n    )\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.newPost(this.state.text);\n        this.setState({text: \"\"});\n    }\n\n    render() {\n        return (\n            <Card className=\"bg-light mb-3\">\n                <Card.Header className=\"h5\">New Post</Card.Header>\n                <Card.Body>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Group controlId=\"formTextPost\">\n                            <Form.Control \n                                name=\"text\" \n                                as=\"textarea\" \n                                placeholder=\"Enter text here...\" \n                                rows=\"3\" \n                                value={this.state.text} \n                                onChange={this.onChange}\n                            />\n                        </Form.Group>\n                        <Button className=\"float-right rounded-pill mr-2\" variant=\"primary\" type=\"submit\">Post</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n    \nexport default NewPost;\n","import React from 'react';\n\nimport { Row, Container, Card } from 'react-bootstrap';\n\nclass PostFeed extends React.Component {\n    buildPost = (post) => {\n        let date = Date(post.posted);\n\n        if (post.type === \"text\") {\n            return (\n                <Card className=\"bg-light mb-3\">\n                    <Card.Body className=\"pt-1\">\n                        <Row className=\"d-flex mx-1 mb-2 border-bottom\">\n                            <Container className=\"col-2 px-0 h-100\">\n                                <img src={post.user.profile_pic} alt=\"Profile\" className=\"img-thumbnail rounded-circle w-100 mb-1 float-left\" />\n                            </Container>\n                            <Card.Text className=\"col-10 pl-1 mt-3 float-left\" style={{lineHeight: 1.0 }}>\n                                <a href={post.user.profile}>{post.user.name}</a><br/>\n                                <small>{`posted ${date.split(\" \").slice(0,3).join(' ')}`}</small>\n                            </Card.Text>\n                        </Row>\n                        <Card.Text>{post.content}</Card.Text>\n                    </Card.Body>\n                </Card>\n            )\n        }\n    }\n\n    render() {\n        let posts = this.props.posts;\n        let byDate = (post1,post2) => {\n            return (post1.date > post2.date)\n            ? -1\n            : 1\n        }\n\n        return (\n            <>\n            {posts.sort(byDate).map(this.buildPost)}\n            </>\n        );\n    }\n}\n    \nexport default PostFeed;\n","// Utilities\nimport React from 'react';\nimport './App.css';\nimport { Container, Row } from 'react-bootstrap';\n\n// Components\nimport Header from './components/Header.js';\nimport About from './components/About.js';\nimport NewPost from './components/NewPost.js';\nimport PostFeed from './components/PostFeed.js';\n\n// Static Files\nimport profile_pic from './static/me_mountaintop_thumb.jpg';\nimport banner from './static/banner2.png';\n\n// FontAwesome Config\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBirthdayCake, faPhone, faCompass, faHome, faEnvelope, faVenusMars, faCircle } from '@fortawesome/free-solid-svg-icons'\nlibrary.add( faBirthdayCake, faPhone, faCompass, faHome, faEnvelope, faVenusMars, faCircle );\n\nclass App extends React.Component {\n    state = {\n        activeUser: {\n            name: \"Zenen Treadwell\",\n            profile: '#',\n            profile_pic,\n        },\n\n        header: {\n            name: \"Zenen Treadwell\",\n            profile_pic,\n            banner,\n            links: [\n                { id: 1, name: \"Resume\", addr: \"https://zenentreadwell.github.io/resume/\"},\n                { id: 2, name: \"Github\", addr: \"https://github.com/ZenenTreadwell/\"},\n                { id: 3, name: \"LinkedIn\", addr: \"https://www.linkedin.com/in/zenen-treadwell/\"},\n                { id: 4, name: \"Instagram\", addr: \"https://www.instagram.com/zenentreadwell/\"},\n                { id: 5, name: \"Reddit\", addr: \"https://www.reddit.com/user/Zenen/\"},\n            ],\n        },\n\n        intro: {\n            quote: \"Upstanding citizen & totally average human being - not a wizard\",\n            text: \"Hi, I'm Zenen. I'm an amateur web developer looking to get my start in the industry. Some of my interests include music (listening, mixing, writing), yoga, cycling, treeplanting, rock climbing, and of course: software development! I arrived in Victoria this August, so let me know if you have any suggestions on places to see as a newcomer to the island.\",\n        },\n\n        about: {\n            hometown: \"Cambridge, ON\",\n            loc: \"Colwood, BC\",\n            birthday: \"January 25th, 1996\",\n            phone: \"+1-519-242-7741\",\n            email: \"zenen52@gmail.com\",\n            pronouns: \"he/him/his\",\n        },\n\n        posts: [\n            {\n                type: \"text\",\n                user: {\n                    name: \"Zenen Treadwell\",\n                    profile: '#',\n                    profile_pic,\n                },\n                posted: Date(),\n                content: \"Want to know more about what I can do? Check out my resume! It's linked up on the navbar.\",\n            },\n            {\n                type: \"text\",\n                user: {\n                    name: \"Zenen Treadwell\",\n                    profile: '#',\n                    profile_pic,\n                },\n                posted: Date(),\n                content: \"So you might be asking: where's the backend? Well, I recently moved across the country from Cambridge, ON to Victoria, BC. A lot of my belongings are still in transit - including the Raspberry Pi that I usually use to host my webpage. Rather than attempt to recreate the entire setup on  github.io, I thought it best to whip up a quick placeholder page so that I can focus on what's most important - getting situated in my new home! Expect updates soon.\",\n            }\n        ],\n    };\n\n    newPost = (text) => {\n        let post = {\n            type: \"text\",\n            user: this.state.activeUser,\n            posted: Date(),\n            content: text,\n        };\n\n        this.setState({posts:[...this.state.posts,post]});\n    }\n\n    render() {\n        return (\n            <div className=\"App col-12 col-xl-10 no-gutters  mx-auto\">\n            <Header userInfo={this.state.header} />\n            <Row className=\"col-12 col-sm-11 col-md-10 mx-auto\" >\n                <Container fluid className=\"col-12 col-md-5 px-0 pr-md-3 no-gutters\">\n                    <About intro={this.state.intro} about={this.state.about} />\n                </Container>\n\n                <Container fluid className=\"col-12 col-md-7 px-0\">\n                    <NewPost newPost={this.newPost} />\n                    <PostFeed user={this.state.header} posts={this.state.posts} />\n                </Container>\n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}